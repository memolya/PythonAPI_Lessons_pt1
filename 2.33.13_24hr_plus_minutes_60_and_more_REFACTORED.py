def add_time(time, minutes):
    # Разбиваем часы и минуты из строки, преобразуем в числа
    hours, mins = map(int, time.split(':'))

    # Суммируем текущие минуты и добавочные
    total_minutes = mins + minutes

    # Рассчитываем новые часы и минуты
    new_hours = (hours + total_minutes // 60) % 24  # Переход через 24 часа
                                                    # Делим общее количество минут (total_minutes) на 60. Это определяет, сколько полных часов содержится в total_minutes.
                                                    # hours + (total_minutes // 60):
                                                    # Добавляем полученные часы (total_minutes // 60) к текущему количеству часов (hours).

                                                    # Чтобы результат оставался в пределах 24-часового формата, используем оператор остатка от деления (%).
                                                    # Это возвращает остаток от деления на 24.
                                                    # Например:
                                                    # 25 % 24 = 1  # Один час после полуночи

                                                    #total_minutes % 60:
                                                    # Вычисляем остаток от деления общего количества минут на 60.
                                                    # Это даёт количество минут, которое остаётся после преобразования лишних минут в часы.
                                                    # Например:
                                                    # total_minutes = 125
                                                    # total_minutes % 60 = 5  # Остаётся 5 минут
                                                    # new_minutes содержит минуты, не превысившие одного часа.
    new_minutes = total_minutes % 60                # new_minutes = total_minutes % 60


                                                    # Форматируем часы и минуты с ведущими нулями
    return f'{new_hours:02}:{new_minutes:02}'       #спецификатор формата :02
                                                    # : - Указывает, что после двоеточия (:) будет следовать инструкция для форматирования переменной.
                                                    # 0 - Указывает, что для заполнения свободного места перед числом нужно использовать нули.
                                                    # 2 - Указывает общую ширину отображения числа: если число меньше двух знаков, оно будет дополнено ведущими нулями.
                                                    # Указание :02 задаёт минимальную ширину, но не максимальную. Поэтому числа с более чем двумя знаками отображаются полностью.

# Ввод данных
var = input()
minutes = int(input())

# Проверка на корректность ввода минут
if minutes < 0:
    print("Bad")
else:
    print(add_time(var, minutes))
